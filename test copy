import cv2
import numpy as np


face_classifier = cv2.CascadeClassifier(
    cv2.data.haarcascades + "haarcascade_frontalface_default.xml"
)

video_capture = cv2.VideoCapture(1)
count = 0

def face_extractor(vid):
    gray_image = cv2.cvtColor(vid, cv2.COLOR_BGR2GRAY)
    faces = face_classifier.detectMultiScale(gray_image, 1.1, 5, minSize=(40, 40))
    for (x, y, w, h) in faces:
        cv2.rectangle(vid, (x,y), (x+w, y+h), (0, 255, 0), 4)
    return faces

while True:
    result, video_frame = video_capture.read()
    if result is False:
        break
    
    faces = face_extractor(
        video_frame
    )
    
    cv2.imshow(
        "my Face Detection Project", video_frame
    )
       
    ret, frame = video_capture.read()
    if face_extractor(frame) is not None:
        count += 1
        face = cv2.resize(faces(frame), (200, 200))
        face = cv2.cvtColor(face, cv2.COLOR_BGR2GRAY)

        # Save file in specified directory with unique namex
        file_name_path = './iCloud Photos/nelson'+ str(count) + '.jpg'
        cv2.imwrite(file_name_path, face)

        # Put count on images and display live count
        cv2.putText(face, str(count), (50, 50), cv2.FONT_HERSHEY_COMPLEX, 1, (0,255,0), 2)
        cv2.imshow('Face Cropper', face)
        
    else:
        print("Face not found")
        pass

    if cv2.waitKey(1) == 13 or count <30 : #13 is the Enter Key
        break
        
video_capture.release()
cv2.destroyAllWindows()      
print("Collecting Samples Complete")
